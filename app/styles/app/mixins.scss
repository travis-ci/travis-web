@mixin resetul {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin linkStyle($color: $cement-grey) {
  a {
    color: inherit;
    text-decoration: none;
    border-bottom: 1px solid $color;
    padding-bottom: 0.1rem;
    transition: color 200ms ease, border 200ms ease;

    &:hover,
    &:active {
      color: $color;
      text-decoration: none;
      border-color: transparent;
    }
  }
}

@mixin travisBorder {
  border-radius: 2px;
  border: 1px solid $dry-cement;
}

@mixin fadeOut($position, $angle, $color, $width: 0%) {
  content: "";
  display: block;
  position: absolute;

  @if $position == bottom {
    bottom: 0;
    width: 100%;
    height: 2em;
  }
  @else if $position == right {
    top: 0;
    right: 0;
    width: 2em;
    height: 100%;
  }

  background: linear-gradient($angle, rgba($color, 1) $width, rgba($color, 0) 100%);
}

@mixin colorFadeOut($status, $color) {
  @media #{$medium-up} {
    &.#{$status}:hover {
      .job-name,
      .job-lang,
      .job-env {
        &:after {
          @include fadeOut(right, -90deg, $color);
        }
      }

      .job-name:hover,
      .job-lang:hover,
      .job-env:hover {
        overflow: visible;
        z-index: 80;
        white-space: unset;
        word-break: break-word;
        background-color: $color;

        &:after {
          content: none !important;
        }
      }
    }
  }
}

@mixin colorSVG($color) {
  path, polyline, circle, line, polygon, rect, ellipse {
    fill: none;
    stroke: $color;
  }
}

@mixin colorSVGFill($color) {
  path, polyline, circle, line, polygon, rect, ellipse {
    fill: $color;
    stroke: none;
  }
}

@mixin colorSVGFull($stroke, $fill) {
  path, polyline, circle, line, polygon, rect, ellipse {
    fill: $fill;
    stroke: $stroke;
  }
}

@mixin colorStatusIcons($color, $status) {
  .status-icon.#{$status},
  .request-icon.#{$status} {
    @include colorSVG($color);
  }
}

@mixin rowColor($status, $color, $color-bg: $color) {
  &.#{$status} {
    .color {
      color: $color;

      a {
        color: $color;
        text-decoration: none;

        &:hover,
        &:active {
          border-bottom: 1px solid $color;
        }
      }
    }

    .status-icon,
    .request-icon,
    .color-icon {
      @include colorSVG($color-bg);
    }

    .background {
      background-color: $color-bg;
    }
  }
}

@mixin rowBg($width, $status, $color) {
  &.#{$status} {
    background: linear-gradient(to right, $color 0%, $color $width, white $width, white 100%) no-repeat;
  }
}

@mixin colorBg($color, $status, $width, $color2: white) {
  &.#{$status} {
    background: linear-gradient(to right, $color 0%, $color $width, $color2 $width, $color2 100%) no-repeat;
  }
}

@mixin colorLinks($color, $status) {
  .#{$status},
  .#{$status} a, {
    color: $color;
  }
}

@mixin colorJobs($color, $status, $width, $hover, $bg-start: $color) {
  &.#{$status} {
    @include colorLinks($color, $status);
    @include colorStatusIcons($color, $status);
    @include rowColor($status, $color);

    &:hover,
    &:active {
      background-color: $hover;
      border-left: $width solid $color;
    }
  }
}

@mixin travisColorRows($gradient-width: 10px) {
  @each $state, $colorMap in $stateMap {
    @include colorBg(map-get($colorMap, gradient), $state, $gradient-width);
    @include colorLinks(map-get($colorMap, color), $state);
    @include colorStatusIcons(map-get($colorMap, color), $state);
  }
}
