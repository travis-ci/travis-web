{{#if this.requiresSourceAction}}
  <span class="notice-banner--yellow" data-test-payment-error='true'>
    <SvgImage @name='icon-help' @class='icon-help icon-help-yellow' />
    There was a problem authorizing your card. Please retry.
  </span>
  {{#if this.retryAuthorization.isRunning}}
    <LoadingIndicator/>
  {{else}}
    <button class="button--green" onClick={{action (perform this.retryAuthorization)}} type="button">
      Retry authorization
    </button>
  {{/if}}
{{else if this.requiresSource}}
  <span class="notice-banner--red" data-test-payment-error='true'>
    {{this.stripeErrorMessage}}
  </span>
  <TravisForm
    data-test-stripe-form='true'
    @onSubmit={{perform this.retryPayment}}
    as |form|
  >
    <StripeCard
      @onComplete={{action "complete"}}
      @options={{this.options}}
      as |stripeError|
    >
      {{#if stripeError}}
        <p>{{stripeError.message}}</p>
      {{/if}}
    </StripeCard>
      <span class="notice-banner--white" data-test-help-text='true'>
        Credit card details are never stored on nor reach our servers. Payment data is handled by Stripe.
      </span>
    <div class='billing-checkout__payment'>
      {{#if this.retryPayment.isRunning}}
        <LoadingIndicator/>
      {{else}}
        <button class='button--green' data-test-complete-payment='submit' type="button" {{action form.submit}}>
          Pay {{format-currency this.subscription.plan.price}}
        </button>
      {{/if}}
    </div>
  </TravisForm>
{{else if this.isPending}}
  <span class="notice-banner--yellow" data-test-trial-running-out='true'>
    We are currently waiting for Stripe to finish processing your order.
  </span>
{{else if (and this.isComplete (or this.subscription.isStripe this.subscription.isManual))}}
  {{#if (or this.showPlansSelector this.showAddonsSelector)}}

    {{#if this.hasSubscriptionPermissions }}
    {{#if this.isV2Subscription}}
      <Billing::Process
        @account={{this.account}}
        @subscription={{this.subscription}}
        @selectedPlan={{this.selectedPlan}}
        @selectedAddon={{this.selectedAddon}}
        @showPlansSelector={{this.showPlansSelector}}
        @showAddonsSelector={{this.showAddonsSelector}}
        @showCancelButton={{true}}
        @retryAuthorization={{this.retryAuthorization}}
      />
    {{else}}
      <Billing::Process
        @account={{this.account}}
        @subscription={{this.newV2Subscription}}
        @isProcessCompleted={{this.isProcessCompleted}}
        @v1SubscriptionId={{this.subscription.id}}
        @selectedPlan={{this.selectedPlan}}
        @showPlansSelector={{this.showPlansSelector}}
        @showCancelButton={{true}}
        @retryAuthorization={{this.retryAuthorization}}
      />
    {{/if}}
    {{/if}}
  {{else}}
    {{#if this.hasSubscriptionPermissions }}
    <div class="flex flex--wrap {{if this.account.hasSubscriptionPermissions 'billing-subscription__buttons'}}">
      {{#if this.isLoading}}
        <LoadingIndicator/>
      {{else}}
        <div class="billing-subscription__buttons--change">
          <BillingResubscribeButton
            @account={{this.account}}
            @githubSubscription={{this.githubSubscription}}
            @subscription={{this.subscription}}
            @resubscribe={{this.resubscribe}}
            @isV2Subscription={{this.isV2Subscription}}
            @openPlansSelector={{fn (mut this.showPlansSelector) true}}
          />
        </div>
        <div class='billing-subscription__buttons--addons'>
          {{#if (and this.isV2Subscription this.canBuyAddons)}}
            <button class='button--white-and-teal button--hover' data-test-buy-addons='true' type="button" {{on 'click' (fn (mut this.showAddonsSelector) true)}}>
              Buy addons
            </button>
          {{/if}}
        </div>
        <div class='billing-subscription__buttons--cancel'>
          {{#if this.canCancelSubscription}}
            <a {{on 'click' (fn (mut this.showCancelModal) true)}} href='javascript: void(0);' class='link' data-test-open-cancel-subscription-modal='true'>
              Cancel subscription
            </a>
          {{/if}}
        </div>
      {{/if}}
    </div>
    {{/if}}
  {{/if}}
{{/if}}
 <Dialogs::CancelSubscriptionModal
  @isOpen={{this.showCancelModal}}
  @onClose={{fn (mut this.showCancelModal) false}}
  @subscription={{this.subscription}}
/>
